# Generated by Django 4.2.6 on 2024-08-23 10:27

import auths.validators
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import storages.backends.s3boto3


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('objects', '0013_remove_building_inspector_complaint_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='building',
            options={'ordering': ('-id',), 'verbose_name': 'Объект', 'verbose_name_plural': 'Объекты'},
        ),
        migrations.AlterModelOptions(
            name='complaint',
            options={'ordering': ('-id',), 'verbose_name': 'жалоба от гражданина', 'verbose_name_plural': 'Жалобы от гражданина'},
        ),
        migrations.AlterModelOptions(
            name='documentcomment',
            options={'ordering': ('id',), 'verbose_name': 'Комментарий к документу', 'verbose_name_plural': 'Комментарии к документам'},
        ),
        migrations.AlterModelOptions(
            name='documentkey',
            options={'ordering': ('id',), 'verbose_name': 'Документ', 'verbose_name_plural': 'Документы'},
        ),
        migrations.AlterModelOptions(
            name='documentkeyfile',
            options={'ordering': ('id',), 'verbose_name': 'Файл', 'verbose_name_plural': 'Загруженные файлы'},
        ),
        migrations.RemoveField(
            model_name='building',
            name='area',
        ),
        migrations.RemoveField(
            model_name='building',
            name='building_height',
        ),
        migrations.RemoveField(
            model_name='building',
            name='change_functional_purpose_date',
        ),
        migrations.RemoveField(
            model_name='building',
            name='date_commissioning',
        ),
        migrations.RemoveField(
            model_name='building',
            name='fire_resistance_rating',
        ),
        migrations.RemoveField(
            model_name='building',
            name='functional_po_class',
        ),
        migrations.RemoveField(
            model_name='building',
            name='functional_purpose',
        ),
        migrations.RemoveField(
            model_name='building',
            name='number_floor',
        ),
        migrations.RemoveField(
            model_name='building',
            name='organization_object',
        ),
        migrations.RemoveField(
            model_name='building',
            name='structural_po_class',
        ),
        migrations.RemoveField(
            model_name='building',
            name='volume',
        ),
        migrations.RemoveField(
            model_name='building',
            name='year_construction_reconstruction',
        ),
        migrations.AddField(
            model_name='building',
            name='organization_type',
            field=models.CharField(choices=[('too', 'ТОО'), ('ao', 'АО'), ('ip', 'ИП')], default='too', max_length=32, verbose_name='Тип организации'),
        ),
        migrations.AddField(
            model_name='complaint',
            name='image',
            field=models.ImageField(blank=True, null=True, storage=storages.backends.s3boto3.S3Boto3Storage(location='advertisements/'), upload_to='advertisements/', validators=[auths.validators.validate_file_extension]),
        ),
        migrations.AlterField(
            model_name='building',
            name='address',
            field=models.TextField(verbose_name='Адрес'),
        ),
        migrations.AlterField(
            model_name='building',
            name='documents',
            field=models.ManyToManyField(blank=True, to='objects.document', verbose_name='Документы'),
        ),
        migrations.AlterField(
            model_name='building',
            name='iin',
            field=models.CharField(unique=True, validators=[django.core.validators.RegexValidator(message='IIN must be exactly 12 digits.', regex='^\\d{12}$')], verbose_name='ИИН'),
        ),
        migrations.AlterField(
            model_name='building',
            name='inspector',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inspected_buildings', to=settings.AUTH_USER_MODEL, verbose_name='Инспектор'),
        ),
        migrations.AlterField(
            model_name='building',
            name='organization_name',
            field=models.TextField(blank=True, null=True, verbose_name='Название организации'),
        ),
        migrations.AlterField(
            model_name='building',
            name='rating',
            field=models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3')], max_length=1, null=True, verbose_name='Рейтинг'),
        ),
        migrations.AlterField(
            model_name='complaint',
            name='text',
            field=models.TextField(verbose_name='текст жалобы'),
        ),
        migrations.AlterField(
            model_name='documentcomment',
            name='document_key',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment', to='objects.documentkey', verbose_name='документ'),
        ),
        migrations.AlterField(
            model_name='documentkeyfile',
            name='building',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='objects.building', verbose_name='объект'),
        ),
        migrations.AlterField(
            model_name='documentkeyfile',
            name='document_key',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='objects.documentkey', verbose_name='документ'),
        ),
        migrations.CreateModel(
            name='SubBuilding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('organization_object', models.CharField(blank=True, choices=[('BUILDING', 'Здание'), ('CONSTRUCTION', 'Сооружение'), ('DIFFERENT CONSTRUCTION', 'Иная конструкция')], max_length=255, null=True, verbose_name='Тип здания/сооружения')),
                ('title', models.CharField(blank=True, null=True, verbose_name='Наименование')),
                ('functional_purpose', models.CharField(blank=True, max_length=255, null=True, verbose_name='Предназначение')),
                ('date_commissioning', models.DateField(blank=True, null=True, verbose_name='Дата ввода в эксплуатацию')),
                ('fire_resistance_rating', models.CharField(blank=True, max_length=255, null=True, verbose_name='Степень огнестойкости')),
                ('structural_po_class', models.CharField(blank=True, max_length=255, null=True, verbose_name='Класс конструктивной ПО')),
                ('functional_po_class', models.CharField(blank=True, max_length=255, null=True, verbose_name='Класс функциональной ПО')),
                ('rating', models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3')], max_length=1, null=True, verbose_name='Рейтинг')),
                ('change_functional_purpose_date', models.DateField(blank=True, null=True, verbose_name='Дата изменения функционального назначения')),
                ('floor_number', models.PositiveSmallIntegerField(blank=True, default=1, null=True, verbose_name='Этаж')),
                ('total_floors', models.PositiveSmallIntegerField(blank=True, default=1, null=True, verbose_name='Всего этажей')),
                ('building_foundation', models.TextField(blank=True, null=True, verbose_name='Фундамент здания')),
                ('external_walls_material', models.TextField(blank=True, null=True, verbose_name='Наружные стены (материал)')),
                ('inner_walls_material', models.TextField(blank=True, null=True, verbose_name='Внутренние стены и перегородки (материал)')),
                ('roof', models.TextField(blank=True, null=True, verbose_name='Кровля (тип, материал)')),
                ('stairs', models.TextField(blank=True, null=True, verbose_name='Лестницы (материал)')),
                ('building_height', models.FloatField(blank=True, null=True, verbose_name='Высота здания, м')),
                ('area', models.FloatField(blank=True, null=True, verbose_name='Общая площадь, м^2')),
                ('volume', models.FloatField(blank=True, null=True, verbose_name='Объем здания, м^3')),
                ('lighting', models.TextField(blank=True, null=True, verbose_name='Освещение')),
                ('ventilation', models.TextField(blank=True, null=True, verbose_name='Вентиляция')),
                ('heating', models.TextField(blank=True, null=True, verbose_name='Отопление')),
                ('security', models.TextField(blank=True, null=True, verbose_name='Объект охраняется')),
                ('year_construction_reconstruction', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Год постройки/реконструкции')),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subbuildings', to='objects.building', verbose_name='Головной объект')),
            ],
            options={
                'verbose_name': 'Здание/Сооружение',
                'verbose_name_plural': 'Здания/Сооружения',
                'ordering': ('id',),
            },
        ),
    ]
