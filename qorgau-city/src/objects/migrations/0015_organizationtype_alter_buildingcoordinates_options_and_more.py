# Generated by Django 4.2.6 on 2025-06-18 19:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('specifications', '0001_initial'),
        ('objects', '0014_alter_building_options_alter_complaint_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='OrganizationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Тип организации')),
            ],
            options={
                'verbose_name': 'Тип организации',
                'verbose_name_plural': 'Типы организаций',
            },
        ),
        migrations.AlterModelOptions(
            name='buildingcoordinates',
            options={'ordering': ('-id',), 'verbose_name': 'Координата обьекта', 'verbose_name_plural': 'Координаты обьектов'},
        ),
        migrations.AlterModelOptions(
            name='document',
            options={'verbose_name': 'Глава документа', 'verbose_name_plural': 'Главы документов'},
        ),
        migrations.AlterModelOptions(
            name='documenthistory',
            options={'ordering': ('-id',), 'verbose_name': 'история документа', 'verbose_name_plural': 'история документов'},
        ),
        migrations.AlterModelOptions(
            name='evacaddress',
            options={'ordering': ('-id',), 'verbose_name': 'план эвакуации', 'verbose_name_plural': 'планы эвакуации'},
        ),
        migrations.RemoveField(
            model_name='building',
            name='full_name',
        ),
        migrations.RemoveField(
            model_name='complaint',
            name='image',
        ),
        migrations.RemoveField(
            model_name='complaint',
            name='text',
        ),
        migrations.RemoveField(
            model_name='subbuilding',
            name='organization_object',
        ),
        migrations.RemoveField(
            model_name='subbuilding',
            name='stairs',
        ),
        migrations.AddField(
            model_name='building',
            name='document_keys',
            field=models.ManyToManyField(blank=True, to='objects.documentkey', verbose_name='Документы'),
        ),
        migrations.AddField(
            model_name='building',
            name='escape_ladder',
            field=models.BooleanField(default=False, verbose_name='Эвакуационная лестница (имеется)'),
        ),
        migrations.AddField(
            model_name='building',
            name='organization_characteristics',
            field=models.CharField(blank=True, max_length=200, null=True, verbose_name='Характеристики организации'),
        ),
        migrations.AddField(
            model_name='building',
            name='organization_optional_type',
            field=models.CharField(blank=True, max_length=200, null=True, verbose_name='Под тип организации(Optional)'),
        ),
        migrations.AddField(
            model_name='building',
            name='organization_sub_type',
            field=models.CharField(blank=True, max_length=200, null=True, verbose_name='Тип организации'),
        ),
        migrations.AddField(
            model_name='complaint',
            name='address_detail',
            field=models.TextField(null=True, verbose_name='подробный адрес(отправить жалобу)'),
        ),
        migrations.AddField(
            model_name='complaint',
            name='archive_date',
            field=models.DateTimeField(blank=True, null=True, verbose_name='дата архива жалобы(истек срок)'),
        ),
        migrations.AddField(
            model_name='complaint',
            name='chat_room_id',
            field=models.IntegerField(blank=True, null=True, verbose_name='ID комнаты чата гражданина и инспектора'),
        ),
        migrations.AddField(
            model_name='complaint',
            name='city',
            field=models.CharField(max_length=100, null=True, verbose_name='город расположения здания(отправить жалобу)'),
        ),
        migrations.AddField(
            model_name='complaint',
            name='district',
            field=models.CharField(max_length=100, null=True, verbose_name='район расположения здания(отправить жалобу)'),
        ),
        migrations.AddField(
            model_name='complaint',
            name='expiration_date',
            field=models.DateTimeField(blank=True, null=True, verbose_name='дата истечения срока жалобы(не отвечен)'),
        ),
        migrations.AddField(
            model_name='complaint',
            name='inspector',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_complaints', to=settings.AUTH_USER_MODEL, verbose_name='инспектор'),
        ),
        migrations.AddField(
            model_name='complaint',
            name='status',
            field=models.CharField(choices=[('PENDING', 'Ожидает ответа'), ('ANSWERED', 'Отвечено'), ('EXPIRED', 'Истек срок'), ('NOT_ANSWERED', 'Не отвечено')], default='PENDING', max_length=20, verbose_name='статус жалобы'),
        ),
        migrations.AddField(
            model_name='complaint',
            name='unique_id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AddField(
            model_name='subbuilding',
            name='emergency_lighting',
            field=models.BooleanField(default=False, verbose_name='Аварийное освещение (Имеется)'),
        ),
        migrations.AddField(
            model_name='subbuilding',
            name='stairs_classification',
            field=models.ManyToManyField(related_name='subbuildings_stairs_classification', to='specifications.stairsclassificationchoice', verbose_name='Классификация лестницы'),
        ),
        migrations.AddField(
            model_name='subbuilding',
            name='stairs_material',
            field=models.ManyToManyField(related_name='subbuildings_stairs_material', to='specifications.stairsmaterialchoice', verbose_name='Лестницы (материал)'),
        ),
        migrations.AddField(
            model_name='subbuilding',
            name='stairs_type',
            field=models.ManyToManyField(related_name='subbuildings_stairs_type', to='specifications.stairstypechoice', verbose_name='Лестницы (тип)'),
        ),
        migrations.AddField(
            model_name='subbuilding',
            name='subbuilding_characteristics',
            field=models.CharField(blank=True, max_length=200, null=True, verbose_name='Характеристики подздания'),
        ),
        migrations.AddField(
            model_name='subbuilding',
            name='subbuilding_optional_subtype_type',
            field=models.CharField(blank=True, max_length=200, null=True, verbose_name='Под тип здания/сооружения/помещения/иной конструкции(Optional)'),
        ),
        migrations.AddField(
            model_name='subbuilding',
            name='subbuilding_subtype',
            field=models.CharField(blank=True, null=True, verbose_name='Тип здания/сооружения/помещения/иной конструкции'),
        ),
        migrations.AddField(
            model_name='subbuilding',
            name='subbuilding_type',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Главный Тип здания/сооружения/помещения/иной конструкции'),
        ),
        migrations.AlterField(
            model_name='building',
            name='documents',
            field=models.ManyToManyField(blank=True, to='objects.document', verbose_name='Главы документов'),
        ),
        migrations.AlterField(
            model_name='building',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='собственник'),
        ),
        migrations.AlterField(
            model_name='buildingcoordinates',
            name='building',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='coordinates', to='objects.building', verbose_name='Объект'),
        ),
        migrations.AlterField(
            model_name='buildingcoordinates',
            name='lat',
            field=models.DecimalField(decimal_places=20, max_digits=40, verbose_name='Широта'),
        ),
        migrations.AlterField(
            model_name='buildingcoordinates',
            name='lng',
            field=models.DecimalField(decimal_places=20, max_digits=40, verbose_name='Долгота'),
        ),
        migrations.AlterField(
            model_name='complaint',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='authored_complaints', to=settings.AUTH_USER_MODEL, verbose_name='заявитель'),
        ),
        migrations.RemoveField(
            model_name='subbuilding',
            name='external_walls_material',
        ),
        migrations.AlterField(
            model_name='subbuilding',
            name='fire_resistance_rating',
            field=models.CharField(blank=True, max_length=600, null=True, verbose_name='Степень огнестойкости'),
        ),
        migrations.RemoveField(
            model_name='subbuilding',
            name='heating',
        ),
        migrations.RemoveField(
            model_name='subbuilding',
            name='inner_walls_material',
        ),
        migrations.RemoveField(
            model_name='subbuilding',
            name='lighting',
        ),
        migrations.RemoveField(
            model_name='subbuilding',
            name='roof',
        ),
        migrations.RemoveField(
            model_name='subbuilding',
            name='security',
        ),
        migrations.RemoveField(
            model_name='subbuilding',
            name='ventilation',
        ),
        migrations.CreateModel(
            name='SubBuildingImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='subbuilding_images/', verbose_name='Изображение')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата загрузки')),
                ('subbuilding', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='objects.subbuilding', verbose_name='Здание/Сооружение')),
            ],
            options={
                'verbose_name': 'Изображение здания/сооружения',
                'verbose_name_plural': 'Изображения зданий/сооружений',
            },
        ),
        migrations.CreateModel(
            name='EscapeLadderImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='escape_ladder_images/', verbose_name='Изображение')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата загрузки')),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='escape_ladder_images', to='objects.building', verbose_name='Объект')),
            ],
            options={
                'verbose_name': 'Изображение Эвакуационной Лестницы',
                'verbose_name_plural': 'Изображения Эвакуационных Лестниц',
            },
        ),
        migrations.CreateModel(
            name='DocumentRemark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('content', models.TextField(verbose_name='содержание примечания')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='дата создания заявки')),
                ('building', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='remarks', to='objects.building')),
                ('document_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='remarks', to='objects.documentkey', verbose_name='документ')),
            ],
            options={
                'verbose_name': 'Примечание к документу',
                'verbose_name_plural': 'Примечания к документам',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='BuildingRemark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Содержание примечания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='objects.building', verbose_name='Объект')),
                ('inspector', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='building_notes', to=settings.AUTH_USER_MODEL, verbose_name='Инспектор')),
            ],
            options={
                'verbose_name': 'Примечание к объекту',
                'verbose_name_plural': 'Примечания к объектам',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BuildingPDFDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('file', models.FileField(upload_to='building_pdfs/', verbose_name='PDF Document')),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pdf_documents', to='objects.building')),
            ],
            options={
                'verbose_name': 'Building PDF Document',
                'verbose_name_plural': 'Building PDF Documents',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='BuildingImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='building_images/', verbose_name='Изображение')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата загрузки')),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='objects.building', verbose_name='Объект')),
            ],
            options={
                'verbose_name': 'Изображение объекта',
                'verbose_name_plural': 'Изображения объектов',
            },
        ),
        migrations.AddField(
            model_name='documentkey',
            name='supported_organization_types',
            field=models.ManyToManyField(related_name='document_types', to='objects.organizationtype', verbose_name='Поддерживаемые типы зданий'),
        ),
        migrations.AlterField(
            model_name='building',
            name='organization_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='objects.organizationtype', verbose_name='Главный Тип организации'),
        ),
        migrations.AddField(
            model_name='subbuilding',
            name='external_walls_material',
            field=models.ManyToManyField(related_name='subbuildings_external', to='specifications.externalwallmaterialchoice', verbose_name='Материал наружных стен'),
        ),
        migrations.AddField(
            model_name='subbuilding',
            name='heating',
            field=models.ManyToManyField(related_name='subbuildings_heating', to='specifications.heatingchoice', verbose_name='Отопление'),
        ),
        migrations.AddField(
            model_name='subbuilding',
            name='inner_walls_material',
            field=models.ManyToManyField(related_name='subbuildings_internal', to='specifications.innerwallmaterialchoice', verbose_name='Внутренние стены и перегородки (материал)'),
        ),
        migrations.AddField(
            model_name='subbuilding',
            name='lighting',
            field=models.ManyToManyField(related_name='subbuildings_lighting_type', to='specifications.lightingtypechoice', verbose_name='Освещение'),
        ),
        migrations.AddField(
            model_name='subbuilding',
            name='roof',
            field=models.ManyToManyField(related_name='subbuildings_roof', to='specifications.roofchoice', verbose_name='Кровля (тип, материал)'),
        ),
        migrations.AddField(
            model_name='subbuilding',
            name='security',
            field=models.ManyToManyField(related_name='subbuildings_security', to='specifications.securitychoice', verbose_name='Объект охраняется'),
        ),
        migrations.AddField(
            model_name='subbuilding',
            name='ventilation',
            field=models.ManyToManyField(related_name='subbuildings_ventilation_type', to='specifications.ventilationtypechoice', verbose_name='Вентиляция'),
        ),
    ]
