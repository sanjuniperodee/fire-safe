# Generated by Django 4.2.6 on 2024-01-10 11:42

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('organization_name', models.TextField(blank=True, null=True, verbose_name='Название')),
                ('iin', models.CharField(unique=True, validators=[django.core.validators.RegexValidator(message='IIN must be exactly 12 digits.', regex='^\\d{12}$')], verbose_name='иин')),
                ('address', models.TextField(verbose_name='адрес')),
                ('organization_object', models.CharField(blank=True, max_length=255, null=True)),
                ('functional_purpose', models.CharField(blank=True, max_length=255, null=True)),
                ('date_commissioning', models.DateField(blank=True, null=True)),
                ('rating', models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3')], max_length=1, null=True, verbose_name='рейтинг')),
                ('structural_po_class', models.CharField(blank=True, max_length=255, null=True)),
                ('functional_po_class', models.CharField(blank=True, max_length=255, null=True)),
                ('number_floor', models.IntegerField(blank=True, default=1, null=True)),
                ('building_height', models.FloatField(blank=True, null=True)),
                ('area', models.FloatField(blank=True, null=True)),
                ('volume', models.FloatField(blank=True, null=True)),
                ('year_construction_reconstruction', models.FloatField(blank=True, null=True)),
                ('change_functional_purpose_date', models.DateField(blank=True, null=True)),
                ('option', models.CharField(choices=[('BUILDING', 'Здание'), ('CONSTRUCTION', 'Сооружение'), ('DIFFERENT CONSTRUCTION', 'Иная конструкция')], max_length=100, verbose_name='тип здания')),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('title', models.CharField(max_length=255, unique=True, verbose_name='название')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='childs', to='objects.document')),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='DocumentKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('title', models.TextField(verbose_name='название')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keys', to='objects.document')),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='EvacAddresses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('address', models.CharField(max_length=255, verbose_name='адрес')),
                ('scan_link', models.CharField(max_length=255, verbose_name='ссылка')),
                ('qrcode_url', models.CharField(max_length=255, verbose_name='qr')),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('question', models.TextField(verbose_name='вопрос')),
                ('answer', models.TextField(verbose_name='ответ')),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='DocumentKeyFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='название')),
                ('path', models.FileField(blank=True, max_length=255, null=True, upload_to='upload/%Y/%m/', verbose_name='путь')),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='objects.building')),
                ('document_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='objects.documentkey')),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='DocumentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('action', models.TextField(blank=True, null=True)),
                ('remark', models.TextField(blank=True, null=True)),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='objects.building')),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='DocumentComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('body', models.TextField(verbose_name='название')),
                ('building', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment', to='objects.building')),
                ('document_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment', to='objects.documentkey')),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.AddField(
            model_name='building',
            name='documents',
            field=models.ManyToManyField(blank=True, to='objects.document', verbose_name='документы'),
        ),
        migrations.AddField(
            model_name='building',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='собственник'),
        ),
    ]
