from django.db.models.signals import pre_delete, post_save
from django.dispatch import receiver
from helpers.utils import calculation_building_rating

from objects.models import DocumentHistory, DocumentKeyFile, Building, Document, DocumentKey


def document_keyfile_post_save(instance, comment: str = '') -> None:
    document_key = instance.document_key
    title = document_key.title
    building = instance.building
    action = f"Добавлен документ в секцию '{title}'"
    DocumentHistory.objects.create(action=action, remark=comment, building=building)
    recalculate_rate(building)


@receiver(pre_delete, sender=DocumentKeyFile)
def document_keyfile_pre_delete(sender, instance, **kwargs):
    document_key = instance.document_key
    title = document_key.title
    building = instance.building
    action = f"Удален документ из секций '{title}'"
    DocumentHistory.objects.create(action=action, remark='Удаления', building=building)
    recalculate_rate(building)


def recalculate_rate(building) -> None:
    info = get_document_fields(building)
    rating = calculation_building_rating(info)
    building.rating = rating
    building.save()


def get_document_fields(building) -> list:
    document_data_map = dict()
    info = list()
    for document in building.documents.all():
        keys = []
        for key in document.keys.all():
            fileIds = [item.id for item in DocumentKeyFile.objects.filter(building=building, document_key=key)]
            keys.append({"fileIds": fileIds})

        document_data_map[document.id] = {'keys': keys}
    for document in building.documents.all():
        if document.parent and document.parent.id is not None:
            parent_data = document_data_map.get(document.parent.id)
            if parent_data:
                sub_paragraphs = [document_data_map.pop(document.id)]
                parent_data['subParagraphs'] = parent_data.get('subParagraphs', []) + sub_paragraphs
    parents_id = []
    for document in building.documents.all():
        if document.parent is not None:
            parents_id.append(document.parent.id)
    for document_data in document_data_map.values():
        info.append(dict(document_data))
    return info


@receiver(post_save, sender=Building)
def building_post_save(sender, instance, created, **kwargs):
    """
    Сигнал для автоматического создания документов при создании объекта
    """
    if created:
        create_default_documents_if_not_exist()
        create_generated_document_keys()
        attach_all_documents_to_building(instance)


def create_default_documents_if_not_exist():
    """
    Создает 14 глав документов и их под-документы, если они не существуют в базе
    """
    # 14 глав документов для паспорта объекта
    chapters_data = [
        {
            "title": "I. Организационно-технические мероприятия по обеспечению пожарной безопасности",
            "keys": [
                "Наличие приказа руководителя организации о назначении лиц, ответственных за соблюдение требований пожарной безопасности.",
                "Наличие инструкции о мерах пожарной безопасности, включающей противопожарный режим, соответствующий их пожарной опасности в соответствии с приложением 1 к Правилам ПБ, утвержденной руководителем организации в отношении каждого объекта.",
                "Наличие и соответствие инструкции, устанавливающей для объекта соответствующий его пожарной опасности противопожарный режим.",
                "Наличие журнала учета оставшихся в здании на ночь людей.",
                "Наличие допуска к работе работников после прохождения противопожарного инструктажа, обучения по вопросам пожарной безопасности.",
                "Наличие приказа о назначении должностного лица ответственного за эксплуатацию систем противопожарной защиты, приобретение, ремонт, сохранность и готовность к действию первичных средств пожаротушения, своевременное и качественное проведение технического обслуживания (перезарядке ручных огнетушителей) и планово-предупредительного ремонта.",
                "Наличие в помещениях дежурного персонала у мест размещения телефонов, планов эвакуации, инструкций о мерах пожарной безопасности табличек с указанием номеров телефона противопожарной службы \"101\" и единой дежурно-диспетчерской службы \"112\".",
                "Наличие у дежурного персонала при себе комплекта ключей от всех замков дверей здания, согласно возложенных на него функций.",
                "Наличие специального журнала или автоматизированной системы по учету работ по техническому обслуживанию и планово-предупредительному ремонту технических средств систем противопожарной защиты, проверок наличия и состояния первичных средств пожаротушения.",
                "Наличие знаков пожарной безопасности в помещениях, зданиях, сооружениях, оборудования с повышенной пожарной опасностью.",
                "Наличие у обслуживающего или дежурного персонала зданий для проживания людей, объектов с массовым пребыванием людей электрических фонарей на случай отключения электроэнергии.",
                "Наличие журнала проведения практических тренировок, которые осуществляются руководителем организации объекта с массовым пребыванием людей не реже 1 раза в полугодие.",
                "Наличие табличек на дверях производственных и складских помещений, а также наружных технологических установок с указанием на них категории по взрывопожарной и пожарной опасности.",
                "Наличие знаков пожарной безопасности с указанием места размещения первичных средств пожаротушения и систем пожарной автоматики в соответствии с требованиями документов по стандартизации.",
                "Наличие наружного освещения на территории организации в темное время суток для быстрого нахождения пожарных гидрантов, наружных пожарных лестниц и мест размещения пожарного инвентаря, а также подъездов к пирсам пожарных водоемов.",
                "Наличие на каждом предприятии сведений о показателях пожарной опасности применяемых в технологических процессах веществ и материалов, а для зданий и помещений категории по взрывопожарной и пожарной опасности."
            ]
        },
        {
            "title": "II. Содержание территории",
            "keys": [
                "Содержание в исправном состоянии и доступными для проезда пожарной техники дорог, проездов и подъездов к зданиям, сооружениям, технологическим установкам, открытым складам, наружным пожарным лестницам и источникам противопожарного водоснабжения",
                "Очистка территории от горючих отходов, мусора, тары, опавших листьев, сгораемого мусора и горючих материалов.",
                "Обеспечение устройства защитных противопожарных полос шириной не менее 4 метров, посадка лиственных насаждений, удаление в летний период сухой растительности на территории предприятия."
            ]
        },
        {
            "title": "III. Архитектурно-строительная часть – требования пожарной безопасности к зданиям и сооружениям",
            "subParagraphs": [
                {
                    "title": "3.1 Противопожарные требования к строительным конструкциям",
                    "keys": [
                        "Наличие проектной документации на каждое здание и сооружение предприятия.",
                        "Наличие актов по проведению огнезащитной обработки строительных конструкций зданий и сооружений и их отделки огнезащитными средствами, с подтверждением достигнутых результатов путем проведения испытаний в лаборатории, аккредитованной в государственной системе технического регулирования."
                    ]
                },
                {
                    "title": "3.2 Требования к противопожарным преградам",
                    "keys": [
                        "Защита технологических проемов в стенах и перекрытиях огнепреграждающими устройствами."
                    ]
                },
                {
                    "title": "3.3 Противопожарные требования к элементам зданий",
                    "keys": [
                        "Недопущение отделки ограждений балконов и лоджий горючими материалами в зданиях высотой более 28 метров."
                    ]
                },
                {
                    "title": "3.4 Противопожарное расстояние между зданиями и сооружениями",
                    "keys": [
                        "Соблюдение противопожарных расстояний между зданиями и сооружениями"
                    ]
                }
            ]
        },
        {
            "title": "IV. Содержание эвакуационных путей и выходов зданий и сооружений",
            "keys": [
                "Содержание путей эвакуации незадымляемыми и свободными для движения людей.",
                "Недопущение загромождения эвакуационных путей и выходов мебелью, оборудованием и другими предметами.",
                "Обеспечение свободного открывания дверей эвакуационных выходов.",
                "Содержание замков на дверях эвакуационных выходов в исправном состоянии."
            ]
        },
        {
            "title": "V. Содержание систем и установок пожарной автоматики",
            "keys": [
                "Наличие систем пожарной сигнализации.",
                "Наличие автоматических установок пожаротушения.",
                "Наличие систем оповещения и управления эвакуацией людей при пожаре.",
                "Наличие журналов технического обслуживания систем пожарной автоматики."
            ]
        },
        {
            "title": "VI. Содержание средств противопожарной защиты",
            "keys": [
                "Наличие первичных средств пожаротушения.",
                "Содержание огнетушителей в исправном состоянии.",
                "Наличие пожарных щитов с необходимым инвентарем.",
                "Наличие внутренних пожарных кранов."
            ]
        },
        {
            "title": "VII. Содержание электроустановок",
            "keys": [
                "Содержание электропроводки в исправном состоянии.",
                "Наличие защитных устройств от перегрузки и короткого замыкания.",
                "Недопущение эксплуатации электроприборов с поврежденной изоляцией.",
                "Наличие актов проверки электроустановок."
            ]
        },
        {
            "title": "VIII. Молниезащита и заземление",
            "keys": [
                "Наличие устройств молниезащиты.",
                "Содержание заземляющих устройств в исправном состоянии.",
                "Наличие актов проверки молниезащиты.",
                "Проведение регулярных измерений сопротивления заземления."
            ]
        },
        {
            "title": "IX. Системы отопления",
            "keys": [
                "Содержание отопительных приборов в исправном состоянии.",
                "Недопущение перегрева отопительных приборов.",
                "Наличие защитных экранов у отопительных приборов.",
                "Проведение регулярной очистки дымоходов."
            ]
        },
        {
            "title": "X. Вентиляция и кондиционирование",
            "keys": [
                "Содержание вентиляционных систем в исправном состоянии.",
                "Регулярная очистка вентиляционных каналов.",
                "Наличие противопожарных клапанов в вентиляционных системах.",
                "Проведение технического обслуживания вентиляционного оборудования."
            ]
        },
        {
            "title": "XI. Противодымная защита",
            "keys": [
                "Наличие систем противодымной защиты.",
                "Содержание систем дымоудаления в исправном состоянии.",
                "Наличие систем подпора воздуха.",
                "Проведение технического обслуживания систем противодымной защиты."
            ]
        },
        {
            "title": "XII. Содержание крыш и кровель",
            "keys": [
                "Содержание кровли в исправном состоянии.",
                "Недопущение скопления горючих материалов на кровле.",
                "Наличие ограждений кровли.",
                "Содержание пожарных лестниц в исправном состоянии."
            ]
        },
        {
            "title": "XIII. Противопожарное водоснабжение",
            "keys": [
                "Наличие наружного противопожарного водопровода.",
                "Содержание пожарных гидрантов в исправном состоянии.",
                "Наличие внутреннего противопожарного водопровода.",
                "Проведение регулярных испытаний водопроводных сетей."
            ]
        },
        {
            "title": "XIV. Негосударственная противопожарная служба объекта",
            "keys": [
                "Наличие договора на обслуживание с негосударственной противопожарной службой.",
                "Проведение регулярных проверок противопожарного состояния.",
                "Наличие журналов осмотров объекта.",
                "Выполнение предписаний по устранению нарушений."
            ]
        }
    ]
    
    # Создаем документы, если их нет
    for chapter_data in chapters_data:
        title = chapter_data["title"]
        document, created = Document.objects.get_or_create(title=title)
        
        if created:
            print(f"Создана глава: {title}")
        
        # Создаем ключи документов для главы
        if "keys" in chapter_data:
            for key_title in chapter_data["keys"]:
                DocumentKey.objects.get_or_create(
                    title=key_title,
                    document=document
                )
        
        # Обрабатываем подразделы
        if "subParagraphs" in chapter_data:
            for sub_chapter in chapter_data["subParagraphs"]:
                sub_title = sub_chapter["title"]
                sub_document, sub_created = Document.objects.get_or_create(
                    title=sub_title,
                    parent=document
                )
                
                if sub_created:
                    print(f"Создан подраздел: {sub_title}")
                
                # Создаем ключи для подраздела
                if "keys" in sub_chapter:
                    for key_title in sub_chapter["keys"]:
                        DocumentKey.objects.get_or_create(
                            title=key_title,
                            document=sub_document
                        )


def create_generated_document_keys():
    """
    Создает 18 документов для генерации (те что в PassportDocuments.vue)
    """
    generated_documents = [
        "АКТ освидетельствования систем и установок пожарной автоматики",
        "ВЕДОМОСТЬ смонтированных приборов и оборудования систем и установок пожарной автоматики",
        "АКТ ОБСЛЕДОВАНИЯ водопроводной сети на водоотдачу",
        "РАЗРЕШЕНИЕ на производство огневых работ",
        "АКТ ОБСЛЕДОВАНИЯ пожарных гидрантов",
        "АКТ ИСПЫТАНИЙ систем внутреннего противопожарного водоснабжения на работоспособность",
        "АКТ приемки в эксплуатацию систем и установок пожарной автоматики",
        "Протокол испытаний клапанов пожарных кранов на работоспособность",
        "Протокол испытаний внутреннего противопожарного водоснабжения на водоотдачу",
        "Эксплуатационный журнал систем и установок пожарной автоматики",
        "Протокол испытаний испытание параметров систем вентиляции",
        "Испытания по определению прочностей пожарных наружных стационарных лестниц и ограждения кровли",
        "ПРОТОКОЛ ИСПЫТАНИЙ проверки систем молниезащиты",
        "ПРОТОКОЛ ИСПЫТАНИЙ измерения сопротивления изоляции проводов и кабелей",
        "ПРОТОКОЛ ИСПЫТАНИЙ метод испытания на воспламеняемость и классификация",
        "Форма протокола контрольных испытаний по определению качества обработки объекта огнезащитной по металлоконструкциям",
        "Журнал регистрации протоколов испытательной лаборатории",
        "Форма протокола контрольных испытаний по определению качества обработки объекта огнезащитной по деревянным конструкциям"
    ]
    
    # Создаем специальный документ для генерируемых документов
    generated_docs_parent, created = Document.objects.get_or_create(
        title="Генерируемые документы паспорта объекта"
    )
    
    if created:
        print("Создана глава: Генерируемые документы паспорта объекта")
    
    # Создаем DocumentKey для каждого генерируемого документа
    for doc_title in generated_documents:
        DocumentKey.objects.get_or_create(
            title=doc_title,
            document=generated_docs_parent
        )


def attach_all_documents_to_building(building):
    """
    Привязывает все существующие документы и их ключи к новому объекту
    """
    # Получаем все документы (и главные, и дочерние)
    all_documents = Document.objects.all()
    
    # Привязываем все документы к объекту
    building.documents.set(all_documents)
    
    # Привязываем все ключи документов к объекту
    all_document_keys = DocumentKey.objects.all()
    building.document_keys.set(all_document_keys)
    
    print(f"К объекту {building.id} привязано {all_documents.count()} документов и {all_document_keys.count()} ключей")
