# Generated by Django 4.2.6 on 2024-01-10 11:42

import auths.validators
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('name', models.CharField(blank=True, max_length=255, null=True, validators=[auths.validators.validate_alpha], verbose_name='ФИО')),
                ('phone', models.CharField(blank=True, max_length=12, unique=True, validators=[django.core.validators.RegexValidator(message='Номер телефона должен вводиться в формате: +77123456789', regex='^\\+?[0-9]{1,12}$')], verbose_name='номер телефона')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='почта')),
                ('birthdate', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('role', models.CharField(choices=[('CITIZEN', 'Гражданина'), ('OBJECT_OWNER', 'Собственник объекта'), ('INSPECTOR', 'Инспектор'), ('ADMIN', 'Админ'), ('OPERATOR', 'Оператор'), ('FIRE_DEPARTMENT', 'Пожарная часть')], max_length=100, verbose_name='роль')),
                ('status', models.CharField(blank=True, choices=[('ACCEPTED', 'Принято'), ('NOT_ACCEPTED', 'Не принято')], default=None, help_text='Гражданин не имеет статуса', max_length=20, null=True)),
                ('avatar_url', models.ImageField(blank=True, null=True, upload_to='avatars/', validators=[auths.validators.validate_file_extension])),
                ('is_superuser', models.BooleanField(default=False, verbose_name='superuser')),
                ('is_active', models.BooleanField(default=False, verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff')),
                ('iin', models.CharField(unique=True, validators=[django.core.validators.RegexValidator(message='IIN must be exactly 12 digits.', regex='^\\d{12}$')], verbose_name='иин')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
