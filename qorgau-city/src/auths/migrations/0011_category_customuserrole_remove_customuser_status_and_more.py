# Generated by Django 4.2.6 on 2024-08-23 10:27

import auths.validators
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import storages.backends.s3boto3


class Migration(migrations.Migration):

    dependencies = [
        ('auths', '0010_alter_customuser_email_alter_customuser_iin'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Категория')),
                ('measurement_unit', models.CharField(blank=True, max_length=255, null=True, verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name': 'категория',
                'verbose_name_plural': 'категории',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='CustomUserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('CITIZEN', 'Гражданин'), ('OBJECT_OWNER', 'Собственник объекта'), ('INSPECTOR', 'Инспектор'), ('PROVIDER', 'Поставщик'), ('ADMIN', 'Админ'), ('OPERATOR', 'Оператор'), ('FIRE_DEPARTMENT', 'Пожарная часть')], max_length=100, verbose_name='роль')),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.RemoveField(
            model_name='customuser',
            name='status',
        ),
        migrations.AddField(
            model_name='customuser',
            name='about_myself',
            field=models.TextField(blank=True, max_length=255, null=True, verbose_name='О себе'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='bin_field',
            field=models.CharField(default=1, validators=[django.core.validators.RegexValidator(message='BIN must be exactly 12 digits.', regex='^\\d{12}$')], verbose_name='бин'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='customuser',
            name='certificate_number',
            field=models.CharField(blank=True, null=True, verbose_name='Номер удостоверения'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='company_name',
            field=models.TextField(null=True, verbose_name='Название компании'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='organization_name',
            field=models.TextField(null=True, verbose_name='Наименование организации'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='organization_type',
            field=models.CharField(choices=[('too', 'ТОО'), ('ao', 'АО'), ('ip', 'ИП')], default='too', max_length=32, verbose_name='Тип организации'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='position',
            field=models.CharField(blank=True, null=True, verbose_name='Должность'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='rank',
            field=models.CharField(blank=True, null=True, verbose_name='Звание'),
        ),
        migrations.RemoveField(
            model_name='customuser',
            name='role',
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, choices=[('ACCEPTED', 'Принято'), ('NOT_ACCEPTED', 'Не принято')], default='NOT_ACCEPTED', help_text='Гражданин не имеет статуса', max_length=20, null=True)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auths.customuserrole')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_roles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'role_user_roles',
            },
        ),
        migrations.CreateModel(
            name='UserCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('PROVIDER', 'Provider'), ('OBJECT_OWNER', 'Object Owner')], max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_categories', to='auths.category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_categories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Category',
                'verbose_name_plural': 'User Categories',
                'unique_together': {('user', 'category', 'role')},
            },
        ),
        migrations.CreateModel(
            name='OtherAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название других факторов которые показывают профессионализм')),
                ('year_start', models.IntegerField(verbose_name='Год начала')),
                ('year_end', models.IntegerField(blank=True, null=True, verbose_name='Год окончания')),
                ('media', models.FileField(blank=True, null=True, storage=storages.backends.s3boto3.S3Boto3Storage(location='other_professional_credentials/documents/'), upload_to='other_professional_credentials/documents/', validators=[auths.validators.validate_documents_extension], verbose_name='Изображение/Файл документа других профессиональных навыков')),
                ('show_photo_to_clients', models.BooleanField(default=False, verbose_name='Показывать фото клиентам')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='other_achievements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Другие факторы показывающие профессионализм',
                'verbose_name_plural': 'Другие факторы показывающие профессионализм',
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255, verbose_name='Название компании')),
                ('year_start', models.IntegerField(verbose_name='Год начала')),
                ('year_end', models.IntegerField(blank=True, null=True, verbose_name='Год окончания')),
                ('media', models.FileField(storage=storages.backends.s3boto3.S3Boto3Storage(location='experience/documents/'), upload_to='experience/documents/', validators=[auths.validators.validate_documents_extension], verbose_name='Изображение/Файл документа')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Опыт работы',
                'verbose_name_plural': 'Опыт работы',
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('college_name', models.TextField(verbose_name='Информация об образовании')),
                ('year_start', models.IntegerField(verbose_name='Год начала')),
                ('year_end', models.IntegerField(blank=True, null=True, verbose_name='Год окончания')),
                ('degree', models.CharField(blank=True, choices=[('Bachelor', 'Бакалавр'), ('Masters', 'Магистр'), ('Other', 'Другое'), ('Unspecified', 'Не указано')], default='Unspecified', help_text='Не указано степень образования', max_length=20, null=True, verbose_name='Степень образования')),
                ('media', models.FileField(blank=True, storage=storages.backends.s3boto3.S3Boto3Storage(location='education/diplomas/'), upload_to='education/diplomas/', validators=[auths.validators.validate_documents_extension], verbose_name='Фото/Файл диплома')),
                ('show_photo_to_clients', models.BooleanField(default=False, verbose_name='Показывать фото клиентам')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='educations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Образование',
                'verbose_name_plural': 'Образование',
            },
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_name', models.CharField(max_length=255, verbose_name='Название достижения')),
                ('year_received', models.IntegerField(verbose_name='Год получения')),
                ('media', models.FileField(storage=storages.backends.s3boto3.S3Boto3Storage(location='achievements/documents/'), upload_to='achievements/documents/', validators=[auths.validators.validate_documents_extension], verbose_name='Изображение/Файл документа достижения или грамоты')),
                ('show_photo_to_clients', models.BooleanField(default=False, verbose_name='Показывать фото клиентам')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Достижение и грамоты',
                'verbose_name_plural': 'Достижения и грамоты',
            },
        ),
        migrations.AddField(
            model_name='customuser',
            name='categories',
            field=models.ManyToManyField(related_name='users', through='auths.UserCategory', to='auths.category', verbose_name='Категории'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='role',
            field=models.ManyToManyField(blank=True, related_name='users', through='auths.UserRole', to='auths.customuserrole', verbose_name='роль'),
        ),
    ]
