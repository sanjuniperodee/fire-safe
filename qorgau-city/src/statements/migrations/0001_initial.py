# Generated by Django 4.2.6 on 2024-08-23 10:27

import auths.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auths', '0011_category_customuserrole_remove_customuser_status_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Statement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('text', models.TextField(verbose_name='Сообщение')),
                ('service_time', models.DateTimeField(null=True, verbose_name='дата предоставление услуги')),
                ('location', models.TextField(null=True, verbose_name='Место встречи')),
                ('min_price', models.PositiveBigIntegerField(verbose_name='Минимальная цена')),
                ('max_price', models.PositiveBigIntegerField(verbose_name='Максимальная цена')),
                ('is_active', models.BooleanField(default=True, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='дата создания заявки')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Составитель заявки')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StatementMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='statement_media/', validators=[auths.validators.validate_files_extension])),
                ('file_type', models.CharField(blank=True, choices=[('image', 'Image'), ('video', 'Video')], max_length=10)),
                ('statement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='statements.statement', verbose_name='Фотографии/Видео сооружения')),
            ],
        ),
        migrations.CreateModel(
            name='StatementCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='auths.category', verbose_name='Категория')),
                ('statement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='statements.statement', verbose_name='Заявка')),
            ],
            options={
                'verbose_name': 'Категория заявки',
                'verbose_name_plural': 'Категории заявки',
                'ordering': ('id',),
            },
        ),
        migrations.AddField(
            model_name='statement',
            name='categories',
            field=models.ManyToManyField(related_name='statement_categories', through='statements.StatementCategory', to='auths.category', verbose_name='Категория'),
        ),
        migrations.CreateModel(
            name='StatementProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('response_text', models.TextField(blank=True, null=True, verbose_name='Текст отклика')),
                ('proposed_price', models.PositiveIntegerField(blank=True, null=True, verbose_name='Предложенная цена')),
                ('is_accepted', models.BooleanField(default=False, verbose_name='Принято заказчиком')),
                ('provider', models.ForeignKey(limit_choices_to={'role__role': 'PROVIDER'}, on_delete=django.db.models.deletion.CASCADE, related_name='responded_statements', to=settings.AUTH_USER_MODEL, verbose_name='Поставщик')),
                ('statement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='provider_responses', to='statements.statement', verbose_name='Заявка')),
            ],
            options={
                'verbose_name': 'Отклик поставщика',
                'verbose_name_plural': 'Отклики поставщиков',
                'ordering': ['-created_at'],
                'unique_together': {('statement', 'provider')},
            },
        ),
    ]
